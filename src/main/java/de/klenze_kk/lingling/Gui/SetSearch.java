/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.klenze_kk.lingling.Gui;
import de.klenze_kk.lingling.Main;
import de.klenze_kk.lingling.logic.Vocabulary;
import de.klenze_kk.lingling.logic.VocabularySet;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.function.Consumer;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.table.DefaultTableModel;

public class SetSearch extends javax.swing.JPanel implements KeyListener{
    
    private final VocabularySet set;
    private Set<Vocabulary> add = new HashSet<>(), remove = new HashSet<>();
    
    
    public SetSearch(VocabularySet set) {
        this.set = set;
        initComponents();
        if(set != null){
        setname.setVisible(false);
        namefeld.setVisible(false);
        }
        suchleiste.addKeyListener(this);
        searchResult.addMouseListener(new MouseAdapter() {
        @Override
            public void mouseClicked(MouseEvent e) {
                int row = searchResult.rowAtPoint(e.getPoint());
                int col = searchResult.columnAtPoint(e.getPoint());
                if(col!=0) return;
                Vocabulary v = ((VocabularyTable) searchResult.getModel()).getContent().get(row);
                if(((Boolean) searchResult.getValueAt(row, col)) == true){
                  add.add(v);
                  remove.remove(v);
              }else{
                    remove.add(v);
                    add.remove(v);
                }
            }
        
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        controlPanel1 = new de.klenze_kk.lingling.Gui.ControlPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResult = new javax.swing.JTable();
        Filter = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        klasse10 = new javax.swing.JCheckBox();
        klasse111 = new javax.swing.JCheckBox();
        klasse112 = new javax.swing.JCheckBox();
        klasse11quadrat = new javax.swing.JCheckBox();
        klasse122 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        von3 = new javax.swing.JTextField();
        bis3 = new javax.swing.JTextField();
        einzelnesBlatt3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        enthalten = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        suchleiste = new javax.swing.JTextField();
        suche = new javax.swing.JButton();
        save = new javax.swing.JButton();
        namefeld = new javax.swing.JTextField();
        setname = new javax.swing.JLabel();
        addAll = new javax.swing.JButton();
        removeAll = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("Suche:");

        searchResult.setModel(new SetSearch.VocabularyTable());
        jScrollPane1.setViewportView(searchResult);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        klasse10.setBackground(new java.awt.Color(255, 255, 255));
        klasse10.setText("10. Klasse");
        klasse10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        klasse10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klasse10ActionPerformed(evt);
            }
        });

        klasse111.setBackground(new java.awt.Color(255, 255, 255));
        klasse111.setText("11/1");
        klasse111.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        klasse112.setBackground(new java.awt.Color(255, 255, 255));
        klasse112.setText("11/2");
        klasse112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klasse112ActionPerformed(evt);
            }
        });

        klasse11quadrat.setBackground(new java.awt.Color(255, 255, 255));
        klasse11quadrat.setText("12/1");

        klasse122.setBackground(new java.awt.Color(255, 255, 255));
        klasse122.setText("12/2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(klasse10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(klasse112)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(klasse111, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(klasse122)
                    .addComponent(klasse11quadrat))
                .addGap(0, 319, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(klasse10)
                    .addComponent(klasse11quadrat)
                    .addComponent(klasse111))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(klasse122)
                    .addComponent(klasse112, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        Filter.addTab("Zeitraum", jPanel1);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        von3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bis3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        einzelnesBlatt3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("von");

        jLabel13.setText("bis");

        jLabel14.setText("Blattnr.");

        enthalten.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Nur schon Enthaltene:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(von3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(einzelnesBlatt3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(bis3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enthalten)
                .addGap(169, 169, 169))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(einzelnesBlatt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enthalten, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bis3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel13)
                        .addComponent(von3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(56, 56, 56))
        );

        Filter.addTab("Zeichenblätter", jPanel5);

        suchleiste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suchleisteActionPerformed(evt);
            }
        });

        suche.setBackground(new java.awt.Color(0, 0, 0));
        suche.setForeground(new java.awt.Color(255, 255, 255));
        suche.setText("Suche");
        suche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sucheActionPerformed(evt);
            }
        });

        save.setBackground(new java.awt.Color(0, 164, 34));
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        setname.setText("Set-Name");

        addAll.setBackground(new java.awt.Color(245, 247, 0));
        addAll.setForeground(new java.awt.Color(255, 255, 255));
        addAll.setText("add All");
        addAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAllActionPerformed(evt);
            }
        });

        removeAll.setBackground(new java.awt.Color(255, 0, 0));
        removeAll.setForeground(new java.awt.Color(255, 255, 255));
        removeAll.setText("remove All");
        removeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(suche, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(save)
                        .addGap(27, 27, 27)
                        .addComponent(addAll)
                        .addGap(41, 41, 41)
                        .addComponent(removeAll))
                    .addComponent(setname)
                    .addComponent(namefeld, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Filter, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(suchleiste, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(suchleiste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(setname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namefeld, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save)
                            .addComponent(suche)
                            .addComponent(addAll)
                            .addComponent(removeAll))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addComponent(controlPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void klasse112ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void klasse10ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void suchleisteActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void sucheActionPerformed(java.awt.event.ActionEvent evt) {                                      
        String query = suchleiste.getText();
        String unoBlatt  = einzelnesBlatt3.getText();
        String to = bis3.getText();
        String from = von3.getText();
        Set<Short> pageNumbers;
        if(unoBlatt.isEmpty() && to.isEmpty() && from.isEmpty()){
           pageNumbers = null;
        } else{
            pageNumbers = new HashSet<>();
            if(!unoBlatt.isEmpty()){
                try{
                    short s = Short.parseShort(unoBlatt);
                    pageNumbers.add(s);
                }catch(NumberFormatException e){
                   Main.handleError(unoBlatt + " ist keine Zahl", false);
                   return;
                }
            }else{
                try {
                    short max = Short.parseShort(to);
                    for (short i = Short.parseShort(from); i <= max; i++) {
                        pageNumbers.add(i);
                    }
                } catch (NumberFormatException e) {
                    Main.handleError(from + " oder " + to + " ist keine Zahl", true);
                    return;
                }
            }
        }
        Set<String> terms = null;
        if(klasse10.isSelected()|| klasse111.isSelected()|| klasse112.isSelected()|| klasse11quadrat.isSelected()|| klasse122.isSelected()){
            terms = new HashSet<>();
            if(klasse10.isSelected()) terms.add("10");
            if(klasse111.isSelected()) terms.add("11-1");
            if(klasse112.isSelected())terms.add("11-2");
            if(klasse11quadrat.isSelected()) terms.add("12-1");
            if(klasse122.isSelected()) terms.add("12-2");
        }
        
        lastResult = Main.VOCABULARY.performQuery(query, pageNumbers, terms);
        if(enthalten.isSelected()){
        final Iterator<Vocabulary> itr = lastResult.iterator();
        for (Vocabulary v = itr.next(); itr.hasNext(); v = itr.next()) {
            if(!contains(v))
                itr.remove();
            }
        }
        searchResult.setModel(new VocabularyTable(lastResult)); 
        
    }                                     

    private void addAllActionPerformed(java.awt.event.ActionEvent evt) {                                       
       add.addAll(lastResult);
       remove.removeAll(lastResult);
       int maxRow = searchResult.getRowCount();
        for (int i = 0; i < maxRow; i++) {
            searchResult.setValueAt(true, i, 0);
        }
    }                                      

    private void removeAllActionPerformed(java.awt.event.ActionEvent evt) {                                          
      remove.addAll(lastResult);
      add.removeAll(lastResult);
      int maxRow = searchResult.getRowCount();
        for (int i = 0; i < maxRow; i++) {
            searchResult.setValueAt(false, i, 0);
        }
    }                                         

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {                                     
        if(set==null){
            if(namefeld.getText().isEmpty()){
                Main.handleError("Ein Name muss eingegeben werden", false);
                return;
            }
            if(!Main.VOCABULARY.setNameAvailable(namefeld.getText())){
                Main.handleError("Es gibt bereits ein Set mit diesem Namen", false);
                return;
            }
            Main.setJPanel(new LadeScreen());
            Main.getDatabaseManager().createVocabularySet(new Consumer<VocabularySet>() {
                @Override
                public void accept(VocabularySet t) {
                    Main.VOCABULARY.registerSet(t);
                    Main.setJPanel(new VokabelSet());
                }
            }, Main.getUser(), namefeld.getText(), add);
            return;
        }
        set.modify(add, remove);
        Main.setJPanel(new VokabelSet());
                
    }                                    

    
    
    private boolean contains(Vocabulary v){
        return add.contains(v) || (set != null && set.contains(v) && !remove.contains(v));
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JTabbedPane Filter;
    private javax.swing.JButton addAll;
    private javax.swing.JTextField bis3;
    private de.klenze_kk.lingling.Gui.ControlPanel controlPanel1;
    private javax.swing.JTextField einzelnesBlatt3;
    private javax.swing.JCheckBox enthalten;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox klasse10;
    private javax.swing.JCheckBox klasse111;
    private javax.swing.JCheckBox klasse112;
    private javax.swing.JCheckBox klasse11quadrat;
    private javax.swing.JCheckBox klasse122;
    private javax.swing.JTextField namefeld;
    private javax.swing.JButton removeAll;
    private javax.swing.JButton save;
    private javax.swing.JTable searchResult;
    private javax.swing.JLabel setname;
    private javax.swing.JButton suche;
    private javax.swing.JTextField suchleiste;
    private javax.swing.JTextField von3;
    // End of variables declaration                   
    private Set<Vocabulary> lastResult = Main.VOCABULARY.getVocabulary();
    
    
    
    
    
    private static final String[] COLUMNS = {"Enthalten", "Zeichen", "Pinyin", "Deutsch"};
    
    private Object[][] generateRows(Set<Vocabulary> contents) {
        final Object[][] rowData = new Object[contents.size()][];
        final Iterator<Vocabulary> vocItr = contents.iterator();
        Vocabulary current;
        for(int i = 0; vocItr.hasNext(); i++){
            current = vocItr.next();
            rowData[i] = new Object[] {contains(current) ,current.chinese, current.pinyin, current.translation };
            
        }
        return rowData;
    }

    @Override
    public void keyTyped(KeyEvent e) {
       
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
       if(e.getKeyCode() == KeyEvent.VK_ENTER) sucheActionPerformed(null);
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    private class VocabularyTable extends DefaultTableModel {
    
    private final List<Vocabulary> content;
    
    

    protected VocabularyTable(Set<Vocabulary> vs) {
        super(generateRows(vs) , COLUMNS);
        content = new ArrayList<>(vs);
    }

    protected VocabularyTable(){ 
         this(Main.VOCABULARY.getVocabulary());
    }   
    
    public List<Vocabulary> getContent() {
        return content;
    }
    @Override
    public boolean isCellEditable(int row, int column) {
        return column == 0 && ( set == null || !set.template);
    }
    @Override
    public Class<?> getColumnClass(int col){
        return col == 0 ? Boolean.class : super.getColumnClass(col);
    }

    

}
}
